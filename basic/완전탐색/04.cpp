/*
오목
바둑판에는 19개의 가로줄과 세로줄이 있으며, 번호는 1~19이다. 입력으로 바둑판의 상태가 숫자로 표현되어 주어지면 흑이 이겼는지, 백이 이겼는지, 승부가 나지 않았는지 판단하시오. 단, 흑과 백이 동시에 이기거나 두 군데 이상에서 이기는 경우는 주어지지 않는다. 흑이 이겼을 때는 1을, 백이 이겼을 때는 2를 출력하고, 다음 줄에 연속된 다섯 개의 바둑알 중 가운데 위치의 바둑알의 가로줄 번호와 세로줄 번호를 출력하시오.

0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0
0 0 1 1 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0
0 0 2 2 2 2 2 0 2 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

2
4 5

하나의 칸에 대해 8개 방향으로 탐색을 한다. 한 방향에 대해 같은 종류의 수가 존재한다면 해당 방향으로 계속하여 탐색한다. 격자를 벗어나거나, 원래 칸과 다른 수가 존재한다면 탐색을 중단한다. */
#include <bits/stdc++.h>
using namespace std;
int const dy[] = {-1, -1, 0, 1, 1, 1, 0, -1};
int const dx[] = {0, 1, 1, 1, 0, -1, -1, -1};
int a[24][24];
bool isin(int y, int x)
{
    if (y < 0 || x < 0 || y >= 19 || x >= 19)
        return 0;
    return 1;
}
int main()
{
    for (int i = 0; i < 19; i++)
    {
        for (int j = 0; j < 19; j++)
        {
            cin >> a[i][j];
        }
    }
    for (int i = 0; i < 19; i++)
    {
        for (int j = 0; j < 19; j++)
        {
            if (a[i][j] == 0)
                continue;
            for (int k = 0; k < 8; k++)
            {
                int curt = 1;
                int cury = i;
                int curx = j;
                while (true)
                {
                    int ny = cury + dy[k];
                    int nx = curx + dx[k];
                    if(!isin(ny, nx) || a[ny][nx] != a[i][j]) break;
                    curt++;
                    cury = ny; curx = nx;
                }
                if(curt == 5){
                    cout << a[i][j] << "\n";
                    cout << i + 2 * dy[k] + 1 << " " << j + 2 * dx[k] + 1;
                    return 0;
                }
            }
        }
    }
    cout << 0;
}
